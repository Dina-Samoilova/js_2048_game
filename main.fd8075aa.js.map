{"version":3,"sources":["scripts/main.js"],"names":["score","document","querySelector","totalScore","addingCount","cells","querySelectorAll","startButton","startMessage","loseMessage","winMessage","width","resultField","Array","length","fill","StartToRestart","num","clickNum","classList","contains","add","remove","textContent","generateNewNumber","emptyCells","randomCell","i","push","Math","floor","random","Number","isInteger","fillField","checkForLose","array","className","moveRight","one","two","three","four","filteredRow","parseInt","filter","empty","newRow","concat","moveLeft","moveUp","filteredColumn","newColumn","moveDown","combineRow","total","checkForWin","combineColumn","moves","e","key","preventDefault","emptyField","removeEventListener","emptyes","equalRow","equalColumn","addEventListener","evn","target"],"mappings":"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","file":"main.fd8075aa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// variables\nconst score = document.querySelector('.game-score');\nlet totalScore = 0;\nlet addingCount = 0;\nconst cells = document.querySelectorAll('td');\nconst startButton = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst width = 4;\nconst resultField = Array(cells.length).fill('');\n\n// function to Start Game\nfunction StartToRestart(num) {\n  let clickNum = num;\n\n  clickNum++;\n\n  if (clickNum === 1 && startButton.classList.contains('start')) {\n    startButton.classList.add('restart');\n    startButton.classList.remove('start');\n    startButton.textContent = 'Restart';\n    clickNum = 0;\n  }\n}\n\n// function to generate new 2 or 4 on field\nfunction generateNewNumber() {\n  const emptyCells = [];\n  let randomCell;\n\n  addingCount++;\n\n  for (let i = 0; i < resultField.length; i++) {\n    if (resultField[i] === '') {\n      emptyCells.push(i);\n    }\n  }\n\n  if (emptyCells.length !== 0) {\n    randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    if (Number.isInteger((10 * addingCount) / 100)) {\n      resultField[randomCell] = 4;\n      fillField(resultField);\n    } else {\n      resultField[randomCell] = 2;\n      fillField(resultField);\n    }\n  } else {\n    checkForLose();\n  }\n}\n\n// function to fill the field\nfunction fillField(array) {\n  for (let i = 0; i < array.length; i++) {\n    cells[i].textContent = array[i];\n\n    if (array[i] === '') {\n      cells[i].className = 'field-cell';\n    } else {\n      cells[i].className = `field-cell field-cell--${array[i]}`;\n    }\n  }\n}\n\n// function move RIGHT\nfunction moveRight(array) {\n  for (let i = 0; i < array.length; i++) {\n    if (i % 4 === 0) {\n      const one = array[i];\n      const two = array[i + 1];\n      const three = array[i + 2];\n      const four = array[i + 3];\n      const row = [\n        parseInt(one), parseInt(two), parseInt(three), parseInt(four)];\n\n      const filteredRow = row.filter(num => num);\n      const empty = width - filteredRow.length;\n      const emptyCells = Array(empty).fill('');\n      const newRow = emptyCells.concat(filteredRow);\n\n      array[i] = newRow[0];\n      array[i + 1] = newRow[1];\n      array[i + 2] = newRow[2];\n      array[i + 3] = newRow[3];\n    }\n  }\n\n  return array;\n}\n\n// function move LEFT\nfunction moveLeft(array) {\n  for (let i = 0; i < array.length; i++) {\n    if (i % 4 === 0) {\n      const one = array[i];\n      const two = array[i + 1];\n      const three = array[i + 2];\n      const four = array[i + 3];\n      const row = [\n        parseInt(one), parseInt(two), parseInt(three), parseInt(four)];\n\n      const filteredRow = row.filter(num => num);\n      const empty = width - filteredRow.length;\n      const emptyCells = Array(empty).fill('');\n      const newRow = filteredRow.concat(emptyCells);\n\n      array[i] = newRow[0];\n      array[i + 1] = newRow[1];\n      array[i + 2] = newRow[2];\n      array[i + 3] = newRow[3];\n    }\n  }\n\n  return array;\n}\n\n// function move UP\nfunction moveUp(array) {\n  for (let i = 0; i < width; i++) {\n    const one = array[i];\n    const two = array[i + width];\n    const three = array[i + (width * 2)];\n    const four = array[i + (width * 3)];\n    const column = [\n      parseInt(one), parseInt(two), parseInt(three), parseInt(four)];\n\n    const filteredColumn = column.filter(num => num);\n    const empty = width - filteredColumn.length;\n    const emptyCells = Array(empty).fill('');\n    const newColumn = filteredColumn.concat(emptyCells);\n\n    array[i] = newColumn[0];\n    array[i + width] = newColumn[1];\n    array[i + (width * 2)] = newColumn[2];\n    array[i + (width * 3)] = newColumn[3];\n  }\n\n  return array;\n}\n\n// function move DOWN\nfunction moveDown(array) {\n  for (let i = 0; i < width; i++) {\n    const one = array[i];\n    const two = array[i + width];\n    const three = array[i + (width * 2)];\n    const four = array[i + (width * 3)];\n    const column = [\n      parseInt(one), parseInt(two), parseInt(three), parseInt(four)];\n\n    const filteredColumn = column.filter(num => num);\n    const empty = width - filteredColumn.length;\n    const emptyCells = Array(empty).fill('');\n    const newColumn = emptyCells.concat(filteredColumn);\n\n    array[i] = newColumn[0];\n    array[i + width] = newColumn[1];\n    array[i + (width * 2)] = newColumn[2];\n    array[i + (width * 3)] = newColumn[3];\n  }\n\n  return array;\n}\n\n// function combine rows\nfunction combineRow(array) {\n  for (let i = 0; i < array.length; i++) {\n    if ((i + 1) % 4 !== 0) {\n      if (array[i] === array[i + 1]\n          && array[i] !== '') {\n        const total = array[i] + array[i + 1];\n\n        array[i] = total;\n        array[i + 1] = '';\n\n        totalScore += total;\n\n        score.textContent = totalScore;\n      }\n    }\n  }\n\n  checkForWin();\n\n  return array;\n}\n\n// function combine column\nfunction combineColumn(array) {\n  for (let i = 0; i < array.length - width; i++) {\n    if (array[i] === array[i + width] && array[i] !== '') {\n      const total = parseInt(array[i]) + parseInt(array[i + width]);\n\n      array[i] = total;\n      array[i + width] = '';\n      totalScore += total;\n\n      score.textContent = totalScore;\n    }\n  }\n\n  checkForWin();\n\n  return array;\n}\n\n// function of moves by keyboard arrow\nfunction moves(e) {\n  const firstArrowClick = 0;\n\n  switch (e.key) {\n    // move UP\n    case 'ArrowUp':\n      e.preventDefault();\n      StartToRestart(firstArrowClick);\n      moveUp(resultField);\n      combineColumn(resultField);\n      moveUp(resultField);\n      fillField(resultField);\n\n      generateNewNumber();\n      break;\n\n    // move DOWN\n    case 'ArrowDown':\n      e.preventDefault();\n      StartToRestart(firstArrowClick);\n      moveDown(resultField);\n      combineColumn(resultField);\n      moveDown(resultField);\n      fillField(resultField);\n\n      generateNewNumber();\n      break;\n\n    // move LEFT\n    case 'ArrowLeft':\n      StartToRestart(firstArrowClick);\n      moveLeft(resultField);\n      combineRow(resultField);\n      moveLeft(resultField);\n      fillField(resultField);\n\n      generateNewNumber();\n      break;\n\n    // move RIGHT\n    case 'ArrowRight':\n      StartToRestart(firstArrowClick);\n      moveRight(resultField);\n      combineRow(resultField);\n      moveRight(resultField);\n      fillField(resultField);\n\n      generateNewNumber();\n      break;\n  }\n}\n\n// empty field\nfunction emptyField() {\n  for (let i = 0; i < resultField.length; i++) {\n    resultField[i] = '';\n  }\n\n  fillField(resultField);\n}\n\n// function Win Message\nfunction checkForWin() {\n  for (let i = 0; i < resultField.length; i++) {\n    if (resultField[i] === 2048) {\n      winMessage.classList.remove('hidden');\n\n      document.removeEventListener('keydown', moves);\n    }\n  }\n}\n\n// function Lose Message\nfunction checkForLose() {\n  let emptyes = 0;\n  let equalRow = 0;\n  let equalColumn = 0;\n\n  for (let i = 0; i < resultField.length; i++) {\n    if (resultField[i] === '') {\n      emptyes++;\n    }\n\n    if ((i + 1) % 4 !== 0) {\n      if (resultField[i] === resultField[i + 1]) {\n        equalRow++;\n      }\n    }\n\n    if (i < 12) {\n      if (resultField[i] === resultField[i + width]) {\n        equalColumn++;\n      }\n    }\n  }\n\n  if (equalRow === 0 && equalColumn === 0 && emptyes === 0) {\n    loseMessage.classList.remove('hidden');\n\n    document.removeEventListener('keydown', moves);\n  }\n}\n\n// listener on click START button and all game engine\nstartButton.addEventListener('click', (evn) => {\n  startMessage.classList.add('hidden');\n\n  if (evn.target.classList.contains('start')) {\n    addingCount = 0;\n    score.textContent = 0;\n    emptyField();\n    generateNewNumber();\n    generateNewNumber();\n  }\n\n  if (evn.target.classList.contains('restart')) {\n    startMessage.classList.remove('hidden');\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n    startButton.textContent = 'Start';\n    emptyField();\n  }\n\n  document.addEventListener('keydown', moves);\n});\n"]}